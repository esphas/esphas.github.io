{"version":3,"sources":["webpack:///./src/pages/friends.js","webpack:///./src/components/seo.js"],"names":["Friend","name","link","css","href","FriendsPage","title","SEO","description","image","pathname","article","query","render","site","siteMetadata","defaultTitle","titleTemplate","defaultDescription","siteUrl","defaultImage","seo","url","content","property","defaultProps"],"mappings":"oJAKoC,4CAE9BA,EAAS,SAAH,OAAMC,EAAI,EAAJA,KAAMC,EAAI,EAAJA,KAAI,OAC1B,kBAAIC,IAAG,GAGL,qBAAG,iBAAGC,KAAMF,GAAOD,MAErB,wEAgCaI,UA9BK,WAAH,OACf,YAAC,IAAM,KACL,YAAC,IAAG,CACFC,MAAM,YAER,kBAAIH,IAAG,GAKL,YAACH,EAAM,CACLC,KAAK,SACLC,KAAK,8BAEP,YAACF,EAAM,CACLC,KAAK,UACLC,KAAK,wBAEP,YAACF,EAAM,CACLC,KAAK,WACLC,KAAK,0BAEP,YAACF,EAAM,CACLC,KAAK,UACLC,KAAK,qC,kCCtCb,6DAKMK,EAAM,SAAH,OAAMD,EAAK,EAALA,MAAOE,EAAW,EAAXA,YAAaC,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAAUC,EAAO,EAAPA,QAAO,OACzD,YAAC,cAAW,CACVC,MAAOA,EACPC,OAAQ,YAUD,IAAD,IATJC,KACEC,aACEC,EAAY,EAAZA,aACAC,EAAa,EAAbA,cACAC,EAAkB,EAAlBA,mBACAC,EAAO,EAAPA,QACAC,EAAY,EAAZA,aAIEC,EAAM,CACVf,MAAOA,GAASU,EAChBR,YAAaA,GAAeU,EAC5BI,IAAI,GAAIH,GAAUT,GAAY,KAC9BD,MAAM,GAAIU,GAAUV,GAASW,IAG/B,OACE,8BACE,YAAC,SAAM,CAACd,MAAOe,EAAIf,MAAOW,cAAeA,GACvC,oBAAMhB,KAAK,cAAcsB,QAASF,EAAIb,cACtC,oBAAMP,KAAK,QAAQsB,QAASF,EAAIZ,QAC/BY,EAAIC,KAAO,oBAAME,SAAS,SAASD,QAASF,EAAIC,OAC/CX,EAAiB,KACjB,oBAAMa,SAAS,UAAUD,QAAQ,YAElCF,EAAIf,OAAS,oBAAMkB,SAAS,WAAWD,QAASF,EAAIf,QACpDe,EAAIb,aACH,oBAAMgB,SAAS,iBAAiBD,QAASF,EAAIb,cAE9Ca,EAAIZ,OAAS,oBAAMe,SAAS,WAAWD,QAASF,EAAIZ,cAgBjEF,EAAIkB,aAAe,CACjBnB,MAAO,KACPE,YAAa,KACbC,MAAO,KACPC,SAAU,KACVC,SAAS,GAGIJ,MAEf,IAAMK,EAAK","file":"component---src-pages-friends-js-1f7f0b800991cda7ce9b.js","sourcesContent":["\nimport React from 'react';\nimport { css } from '@emotion/core';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst Friend = ({ name, link }) => (\n  <li css={css`\n    margin: 8px;\n  `}>\n    <p><a href={link}>{name}</a></p>\n  </li>\n);\n\nconst FriendsPage = () => (\n  <Layout>\n    <SEO\n      title=\"Friends\"\n    />\n    <ul css={css`\n      list-style: none;\n      margin-left: 0;\n      display: flex;\n    `}>\n      <Friend\n        name=\"taroxd\"\n        link=\"https://taroxd.github.io/\"\n      />\n      <Friend\n        name=\"hyrious\"\n        link=\"https://hyrious.me/\"\n      />\n      <Friend\n        name=\"invwindy\"\n        link=\"http://cirno.mist.so/\"\n      />\n      <Friend\n        name=\"Ulysses\"\n        link=\"https://ulysseszh.github.io/\"\n      />\n    </ul>\n  </Layout>\n);\n\nexport default FriendsPage;\n","\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst SEO = ({ title, description, image, pathname, article }) => (\n  <StaticQuery\n    query={query}\n    render={({\n      site: {\n        siteMetadata: {\n          defaultTitle,\n          titleTemplate,\n          defaultDescription,\n          siteUrl,\n          defaultImage,\n        },\n      },\n    }) => {\n      const seo = {\n        title: title || defaultTitle,\n        description: description || defaultDescription,\n        url: `${siteUrl}${pathname || \"/\"}`,\n        image: `${siteUrl}${image || defaultImage}`,\n      };\n\n      return (\n        <>\n          <Helmet title={seo.title} titleTemplate={titleTemplate}>\n            <meta name=\"description\" content={seo.description} />\n            <meta name=\"image\" content={seo.image} />\n            {seo.url && <meta property=\"og:url\" content={seo.url} />}\n            {(article ? true : null) && (\n              <meta property=\"og:type\" content=\"article\" />\n            )}\n            {seo.title && <meta property=\"og:title\" content={seo.title} />}\n            {seo.description && (\n              <meta property=\"og:description\" content={seo.description} />\n            )}\n            {seo.image && <meta property=\"og:image\" content={seo.image} />}\n          </Helmet>\n        </>\n      );\n    }}\n  />\n);\n\nSEO.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  image: PropTypes.string,\n  pathname: PropTypes.string,\n  article: PropTypes.bool,\n};\n\nSEO.defaultProps = {\n  title: null,\n  description: null,\n  image: null,\n  pathname: null,\n  article: false,\n};\n\nexport default SEO;\n\nconst query = graphql`\n  query {\n    site {\n      siteMetadata {\n        defaultTitle: title\n        titleTemplate\n        defaultDescription: description\n        siteUrl\n        defaultImage: image\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}