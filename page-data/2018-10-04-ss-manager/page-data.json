{"componentChunkName":"component---src-templates-blog-post-js","path":"/2018-10-04-ss-manager/","result":{"data":{"markdownRemark":{"html":"<p>因为我也拿着 RB 叔叔某一辆车的钥匙，而另一辆车上某些乘客又需要转移过来，因此我需要给他们都准备一下配置。</p>\n<p>众所周知（？）<code class=\"language-text\">shadowsocks-libev</code> 是不资瓷 <code class=\"language-text\">port_passward</code> 这种配置方便但是管理不便的配置项的，所以仍然是在 RB 叔叔的提醒下，我了解到了 <code class=\"language-text\">shadowsocks-manager</code>。</p>\n<p>虽然在写下这段话的时候，我才刚打开 <code class=\"language-text\">ss-manager</code> 的 GitHub 页面，但是我对于成功有着强烈的信心。</p>\n<p><strong>本文未包含任何有深度的内容</strong></p>\n<!-- more -->\n<h2>一言以蔽之</h2>\n<p><code class=\"language-text\">ss-manager</code> 通过 <code class=\"language-text\">--manager-address</code> 选项监听端口 <code class=\"language-text\">port 1</code>，而 <code class=\"language-text\">ssmgr (type s)</code> 作为它的前台，会发送指令到 <code class=\"language-text\">port 1</code>，同时监听 <code class=\"language-text\">port 2</code>，<code class=\"language-text\">ssmgr (type m)</code> 就是最终的总管，（通过插件提供的各种方式）管理一系列 <code class=\"language-text\">ssmgr (type s)</code>。</p>\n<h2>正文</h2>\n<p>首先当然是读 Readme 安装了，因为突然发现这辆车没有 <code class=\"language-text\">node</code>，所以先去装了 <code class=\"language-text\">node</code>。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> <span class=\"token parameter variable\">--silent</span> <span class=\"token parameter variable\">--location</span> https://rpm.nodesource.com/setup_8.x <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token function\">bash</span> -\n<span class=\"token function\">sudo</span> yum <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> nodejs\n<span class=\"token function\">sudo</span> <span class=\"token function\">npm</span> i <span class=\"token parameter variable\">-g</span> shadowsocks-manager --unsafe-perm</code></pre></div>\n<p>安装 <code class=\"language-text\">shadowsocks-libev</code> 的过程略。</p>\n<p>接下来是写给 <code class=\"language-text\">ssmgr (type s)</code> 使用的配置文件，它会作为上述 <code class=\"language-text\">ss-manager</code> 的前台，方便起见，我选择直接改默认配置文件 <code class=\"language-text\">~/.ssmgr/default.yml</code>：</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># ~/.ssmgr/default.yml</span>\n<span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> s\n\n<span class=\"token key atrule\">shadowsocks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">address</span><span class=\"token punctuation\">:</span> 127.0.0.1<span class=\"token punctuation\">:</span>端口1\n\n<span class=\"token key atrule\">manager</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">address</span><span class=\"token punctuation\">:</span> 0.0.0.0<span class=\"token punctuation\">:</span>端口2\n  <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'密码'</span>\n\n<span class=\"token key atrule\">db</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'db.sqlite'</span></code></pre></div>\n<p>接下来是管理器，项目的 Readme 里面列了四种管理方式，有兴趣自己去看，配置方式大同小异。仍然是出于方便考虑及个人兴趣，我选择了 <code class=\"language-text\">telegram</code>。</p>\n<p>首先去找 <a href=\"https://telegram.me/BotFather\">BotFather</a> 新建了个机器人，获得 token，接下来写配置，新建配置于 <code class=\"language-text\">~/.ssmgr/telegram.yml</code>：</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># ~/.ssmgr/telegram.yml</span>\n<span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> m\n\n<span class=\"token key atrule\">manager</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">address</span><span class=\"token punctuation\">:</span> 127.0.0.1<span class=\"token punctuation\">:</span>端口2\n  <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'密码'</span>\n\n<span class=\"token key atrule\">plugins</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">telegram</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">use</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">token</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'token'</span>\n\n<span class=\"token key atrule\">db</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'telegram.sqlite'</span></code></pre></div>\n<p>然后写启动脚本，放在一个我开心就好的地方：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n\nsetsid ss-manager <span class=\"token parameter variable\">-m</span> 加密方式 <span class=\"token parameter variable\">-u</span> --manager-address <span class=\"token number\">127.0</span>.0.1:端口1 <span class=\"token operator\">&amp;</span>\nsetsid ssmgr <span class=\"token operator\">&amp;</span>\nsetsid ssmgr <span class=\"token parameter variable\">-c</span> ~/.ssmgr/telegram.yml <span class=\"token operator\">&amp;</span></code></pre></div>\n<p>试运行一下，没有问题，那就可以准备添加开机启动了，至于如何添加开机启动，那就请大家根据自己的情况，另请高明吧。</p>","frontmatter":{"title":"SS Manager 折腾笔记"}}},"pageContext":{"slug":"/2018-10-04-ss-manager/","previous":{"fields":{"slug":"/2018-08-28-risk-of-rain/"}},"next":{"fields":{"slug":"/2018-12-31-summary/"}}}},"staticQueryHashes":["2491404172","3159585216"]}