{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/seo.js"],"names":["IndexPage","css","SEO","title","description","image","pathname","article","query","render","site","siteMetadata","defaultTitle","titleTemplate","defaultDescription","siteUrl","defaultImage","seo","url","name","content","property","defaultProps"],"mappings":"oJAKoC,kDAgBrBA,UAdG,WAAH,OACb,YAAC,IAAM,KACL,YAAC,IAAG,MACJ,mBAAKC,IAAG,GAGN,sG,kCCZN,6DAKMC,EAAM,SAAH,OAAMC,EAAK,EAALA,MAAOC,EAAW,EAAXA,YAAaC,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAAUC,EAAO,EAAPA,QAAO,OACzD,YAAC,cAAW,CACVC,MAAOA,EACPC,OAAQ,YAUD,IAAD,IATJC,KACEC,aACEC,EAAY,EAAZA,aACAC,EAAa,EAAbA,cACAC,EAAkB,EAAlBA,mBACAC,EAAO,EAAPA,QACAC,EAAY,EAAZA,aAIEC,EAAM,CACVd,MAAOA,GAASS,EAChBR,YAAaA,GAAeU,EAC5BI,IAAI,GAAIH,GAAUT,GAAY,KAC9BD,MAAM,GAAIU,GAAUV,GAASW,IAG/B,OACE,8BACE,YAAC,SAAM,CAACb,MAAOc,EAAId,MAAOU,cAAeA,GACvC,oBAAMM,KAAK,cAAcC,QAASH,EAAIb,cACtC,oBAAMe,KAAK,QAAQC,QAASH,EAAIZ,QAC/BY,EAAIC,KAAO,oBAAMG,SAAS,SAASD,QAASH,EAAIC,OAC/CX,EAAiB,KACjB,oBAAMc,SAAS,UAAUD,QAAQ,YAElCH,EAAId,OAAS,oBAAMkB,SAAS,WAAWD,QAASH,EAAId,QACpDc,EAAIb,aACH,oBAAMiB,SAAS,iBAAiBD,QAASH,EAAIb,cAE9Ca,EAAIZ,OAAS,oBAAMgB,SAAS,WAAWD,QAASH,EAAIZ,cAgBjEH,EAAIoB,aAAe,CACjBnB,MAAO,KACPC,YAAa,KACbC,MAAO,KACPC,SAAU,KACVC,SAAS,GAGIL,MAEf,IAAMM,EAAK","file":"component---src-pages-index-js-8bd9dd236e5e0c19ccfb.js","sourcesContent":["\nimport React from 'react';\nimport { css } from '@emotion/core';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO />\n    <div css={css`\n      text-align: center;\n    `}>\n      <p>\n        I never remember having made such a choice -\n        this life, it has chosen me.\n      </p>\n    </div>\n  </Layout>\n);\n\nexport default IndexPage;\n","\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst SEO = ({ title, description, image, pathname, article }) => (\n  <StaticQuery\n    query={query}\n    render={({\n      site: {\n        siteMetadata: {\n          defaultTitle,\n          titleTemplate,\n          defaultDescription,\n          siteUrl,\n          defaultImage,\n        },\n      },\n    }) => {\n      const seo = {\n        title: title || defaultTitle,\n        description: description || defaultDescription,\n        url: `${siteUrl}${pathname || \"/\"}`,\n        image: `${siteUrl}${image || defaultImage}`,\n      };\n\n      return (\n        <>\n          <Helmet title={seo.title} titleTemplate={titleTemplate}>\n            <meta name=\"description\" content={seo.description} />\n            <meta name=\"image\" content={seo.image} />\n            {seo.url && <meta property=\"og:url\" content={seo.url} />}\n            {(article ? true : null) && (\n              <meta property=\"og:type\" content=\"article\" />\n            )}\n            {seo.title && <meta property=\"og:title\" content={seo.title} />}\n            {seo.description && (\n              <meta property=\"og:description\" content={seo.description} />\n            )}\n            {seo.image && <meta property=\"og:image\" content={seo.image} />}\n          </Helmet>\n        </>\n      );\n    }}\n  />\n);\n\nSEO.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  image: PropTypes.string,\n  pathname: PropTypes.string,\n  article: PropTypes.bool,\n};\n\nSEO.defaultProps = {\n  title: null,\n  description: null,\n  image: null,\n  pathname: null,\n  article: false,\n};\n\nexport default SEO;\n\nconst query = graphql`\n  query {\n    site {\n      siteMetadata {\n        defaultTitle: title\n        titleTemplate\n        defaultDescription: description\n        siteUrl\n        defaultImage: image\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}